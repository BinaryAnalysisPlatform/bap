name: nightly-regression-tests

on:
  schedule:
    - cron: "0 6 * * *" # Every day at 06:00 UTC, 2 am EDT
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-18.04
        ocaml-compiler:
          - 4.11.x
          - 4.08.x

    runs-on: ${{ matrix.os }}

    env:
      OPAMJOBS: 2
      OPAMRETRES: 8

    steps:
      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: true
          cache-prefix: nightly

      - name: Install Ghidra
        run: |
          sudo add-apt-repository ppa:ivg/ghidra -y
          sudo apt-get install libghidra-dev -y
          sudo apt-get install libghidra-data -y

      - name: Add the Testing Repository
        run: opam repo add bap git://github.com/BinaryAnalysisPlatform/opam-repository#testing
      - name: Install System Dependencies
        run: opam depext -u bap-extra

      - name: Install radare2 Dependencies
        run: opam depext -u bap-radare2

      - name: Cleanup the Caches
        run: sudo apt clean --yes

      - name: Build and Install BAP
        run: opam install bap-extra bap-radare2

      - name: Checkout the Tests
        uses: actions/checkout@v2
        with:
          repository: BinaryAnalysisPlatform/bap

      - name: Install Extra System Dependencies
        run: |
          opam pin add bap . -n
          opam depext -u bap

      - name: Run Functional Tests
        run: opam exec -- make check

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: opam-log-${{ matrix.os }}-${{ matrix.ocaml-compiler }}
          path: ~/.opam/log

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: bap-log-${{ matrix.os }}-${{ matrix.ocaml-compiler }}
          path: ~/.local/state/bap

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: unit-tests-log-${{ matrix.os }}-${{ matrix.ocaml-compiler }}
          path: _build/oUnit-*.log

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: fun-tests-log-${{ matrix.os }}-${{ matrix.ocaml-compiler }}
          path: |
            testsuite/*.log
            testsuite/logs
