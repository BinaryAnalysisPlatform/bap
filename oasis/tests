Library types_test
  Path:           lib_test/bap_types
  Build$:         (flag(everything) || flag(bap_std)) && flag(tests)
  Install:        false
  CompiledObject: best
  BuildDepends:   bap, oUnit, core_kernel, regular, graphlib, ocamlgraph, bap-future, ppx_bap
  Modules:        Test_bitvector,
                  Test_bili,
                  Test_bytes,
                  Test_graph,
                  Test_optimizations,
                  Test_trie

Library image_test
  Path:           lib_test/bap_image
  Build$:         (flag(everything) || flag(bap_std)) && flag(tests)
  CompiledObject: best
  BuildDepends:   bap, oUnit, core_kernel, bap-future
  Install:        false
  Modules:        Test_image,
                  Test_memmap,
                  Test_table

Library project_test
  Path:           lib_test/bap_project
  Build$:         (flag(everything) || flag(bap_std)) && flag(tests)
  CompiledObject: best
  BuildDepends:   bap, oUnit, core_kernel, bap-core-theory, bap-future, bap-knowledge
  Install:        false
  Modules:        Test_project

Library disasm_test
  Path:           lib_test/bap_disasm
  Build$:         (flag(everything) || flag(bap_std)) && flag(tests)
  CompiledObject: best
  BuildDepends:   bap, oUnit, str, core_kernel, regular, ppx_bap
  Install:        false
  Modules:        Test_disasm

Library sema_test
  Path:           lib_test/bap_sema
  Build$:         (flag(everything) || flag(bap_std)) && flag(tests)
  CompiledObject: best
  BuildDepends:   bap, oUnit, core_kernel
  Install:        false
  Modules:        Test_ir

Executable run_tests
  Path:         lib_test/bap
  MainIs:       run_tests.ml
  Install:      false
  Build$:       (flag(everything) || flag(bap_std)) && flag(tests)
  BuildDepends: disasm_test,
                image_test,
                oUnit,
                sema_test,
                types_test,
                project_test,
                core_kernel,
                bap-plugins,
                bap-main,
                findlib.dynload
  CompiledObject: best


Test unit_tests
  TestTools: run_tests
  Command: $run_tests -runner sequential

Test inline_tests
  TestTools: run_tests
  Command: $run_tests inline-test-runner bap -show-counts
